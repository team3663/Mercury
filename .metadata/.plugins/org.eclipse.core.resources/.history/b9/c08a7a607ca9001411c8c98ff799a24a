package org.usfirst.frc.team3663.robot.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc.team3663.robot.Robot;

/**
 *
 */
public class C_EncoderDriveF extends Command {

	int Inches;
	boolean finished;
	double speed;
	int currTicksL, currTicksR, ticksL, ticksR;
	double ticksPerInch = 780/23.561944905;
	
    public C_EncoderDriveF(int inches) {
        // Use requires() here to declare subsystem dependencies
   //     requires(Robot.chassis);
        Inches = inches;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	ticksL = (int)(Inches*ticksPerInch);
    	ticksR = (int)(Inches*ticksPerInch);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	currTicksL = Robot.chassis.getLeftEncoderTicks();
    	currTicksR = Robot.chassis.getRightEncoderTicks();
    	
    	SmartDashboard.putNumber("leftEncoder: ", Robot.chassis.getLeftEncoderTicks());
    	SmartDashboard.putNumber("leftEncoder: ", Robot.chassis.getRightEncoderTicks());
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        if (finished) return true;
        else return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	speed = 0;
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
